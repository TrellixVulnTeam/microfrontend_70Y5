{"ast":null,"code":"import _regeneratorRuntime from \"/Users/charles/Documents/MicroFrontEnd/bistro2.0/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/charles/Documents/MicroFrontEnd/bistro2.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.math.trunc.js\";\nimport providerAPI from './providerAPI';\n\nvar state = function state() {\n  return {\n    allProviders: [],\n    selectedProvider: {},\n    displaySubmenu: false\n  };\n};\n\nvar getters = {};\nvar actions = {\n  apiGetAllProviders: function apiGetAllProviders(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var commit, providers;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return providerAPI.getProviders();\n\n            case 3:\n              providers = _context.sent;\n              commit('setAllProviders', providers);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  changeProvider: function changeProvider(_ref2, provider) {\n    var commit = _ref2.commit;\n    commit('setSelectedProvider', provider);\n  },\n  randomSelectedProvider: function randomSelectedProvider(_ref3) {\n    var state = _ref3.state,\n        commit = _ref3.commit;\n    var index = Math.random() * state.allProviders.lenght;\n    index = Math.trunc(index);\n    commit('setSelectedProvider', state.allProviders[index]);\n  },\n  changeDisplaySubmenu: function changeDisplaySubmenu(_ref4, value) {\n    var commit = _ref4.commit;\n    commit('setDisplaySubmenu', value);\n  }\n};\nvar mutations = {\n  setAllProviders: function setAllProviders(state, providers) {\n    state.allProviders = providers;\n  },\n  setSelectedProvider: function setSelectedProvider(state, provider) {\n    state.selectedProvider = provider;\n  },\n  setDisplaySubmenu: function setDisplaySubmenu(state, value) {\n    state.displaySubmenu = value;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"names":["providerAPI","state","allProviders","selectedProvider","displaySubmenu","getters","actions","apiGetAllProviders","commit","getProviders","providers","changeProvider","provider","randomSelectedProvider","index","Math","random","lenght","trunc","changeDisplaySubmenu","value","mutations","setAllProviders","setSelectedProvider","setDisplaySubmenu","namespaced"],"sources":["/Users/charles/Documents/MicroFrontEnd/bistro2.0/src/ProviderSelection/providers.js"],"sourcesContent":["import providerAPI from './providerAPI'\n\nconst state = () => ({\n    allProviders : [],\n    selectedProvider : {},\n    displaySubmenu : false\n})\n\nconst getters = {\n    \n}\n\nconst actions = {\n    async apiGetAllProviders ({commit}) {\n        const providers = await providerAPI.getProviders();\n        commit('setAllProviders', providers);\n    },\n\n    changeProvider({commit}, provider) {\n        commit('setSelectedProvider', provider)\n    },\n\n    randomSelectedProvider ({state, commit}) {\n        var index = Math.random() * state.allProviders.lenght\n        index = Math.trunc(index)\n        commit('setSelectedProvider', state.allProviders[index])\n    },\n\n    changeDisplaySubmenu({commit}, value) {\n        commit('setDisplaySubmenu', value)\n    }\n}\n\nconst mutations = {\n    setAllProviders (state, providers) {\n        state.allProviders = providers\n    },\n\n    setSelectedProvider(state, provider) {\n        state.selectedProvider = provider\n    },\n\n    setDisplaySubmenu(state, value) {\n        state.displaySubmenu = value\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n  }"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;EAAA,OAAO;IACjBC,YAAY,EAAG,EADE;IAEjBC,gBAAgB,EAAG,EAFF;IAGjBC,cAAc,EAAG;EAHA,CAAP;AAAA,CAAd;;AAMA,IAAMC,OAAO,GAAG,EAAhB;AAIA,IAAMC,OAAO,GAAG;EACNC,kBADM,oCACwB;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAATC,MAAS,QAATA,MAAS;cAAA;cAAA,OACRR,WAAW,CAACS,YAAZ,EADQ;;YAAA;cAC1BC,SAD0B;cAEhCF,MAAM,CAAC,iBAAD,EAAoBE,SAApB,CAAN;;YAFgC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAGnC,CAJW;EAMZC,cANY,iCAMaC,QANb,EAMuB;IAAA,IAAnBJ,MAAmB,SAAnBA,MAAmB;IAC/BA,MAAM,CAAC,qBAAD,EAAwBI,QAAxB,CAAN;EACH,CARW;EAUZC,sBAVY,yCAU6B;IAAA,IAAhBZ,KAAgB,SAAhBA,KAAgB;IAAA,IAATO,MAAS,SAATA,MAAS;IACrC,IAAIM,KAAK,GAAGC,IAAI,CAACC,MAAL,KAAgBf,KAAK,CAACC,YAAN,CAAmBe,MAA/C;IACAH,KAAK,GAAGC,IAAI,CAACG,KAAL,CAAWJ,KAAX,CAAR;IACAN,MAAM,CAAC,qBAAD,EAAwBP,KAAK,CAACC,YAAN,CAAmBY,KAAnB,CAAxB,CAAN;EACH,CAdW;EAgBZK,oBAhBY,uCAgBmBC,KAhBnB,EAgB0B;IAAA,IAAhBZ,MAAgB,SAAhBA,MAAgB;IAClCA,MAAM,CAAC,mBAAD,EAAsBY,KAAtB,CAAN;EACH;AAlBW,CAAhB;AAqBA,IAAMC,SAAS,GAAG;EACdC,eADc,2BACGrB,KADH,EACUS,SADV,EACqB;IAC/BT,KAAK,CAACC,YAAN,GAAqBQ,SAArB;EACH,CAHa;EAKda,mBALc,+BAKMtB,KALN,EAKaW,QALb,EAKuB;IACjCX,KAAK,CAACE,gBAAN,GAAyBS,QAAzB;EACH,CAPa;EASdY,iBATc,6BASIvB,KATJ,EASWmB,KATX,EASkB;IAC5BnB,KAAK,CAACG,cAAN,GAAuBgB,KAAvB;EACH;AAXa,CAAlB;AAcA,eAAe;EACXK,UAAU,EAAE,IADD;EAEXxB,KAAK,EAALA,KAFW;EAGXI,OAAO,EAAPA,OAHW;EAIXC,OAAO,EAAPA,OAJW;EAKXe,SAAS,EAATA;AALW,CAAf"},"metadata":{},"sourceType":"module"}