{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search-bar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.searchInput = $event),\n    placeholder: \"Search...\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.searchInput]])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;uBAAXC,oBAEM,KAFN,cAEM,iBADFC,oBAAiE,OAAjE,EAAiE;IAA1DC,IAAI,EAAC,MAAqD;+DAArCC,mBAAWC,OAA0B;IAAxBC,WAAW,EAAC;EAAY,CAAjE;;EAAA,kBAA4BF,mBAC1B,CAFN","names":["class","_createElementBlock","_createElementVNode","type","_ctx","$event","placeholder"],"sourceRoot":"","sources":["/Users/charles/Documents/MicroFrontEnd/bistro/src/components/searchBar.vue"],"sourcesContent":["<template>\n    <div class=\"search-bar\">\n        <input type=\"text\" v-model=\"searchInput\" placeholder=\"Search...\">\n    </div>\n</template>\n\n<script>\nimport { mapState, mapMutations, mapActions } from 'vuex'\nexport default {\n    computed: {\n        ...mapState({\n            searchInput: state => state.search.searchInput\n        }),\n        \n\n    },\n    methods: {\n        ...mapActions({\n            getNewProducts : state => state.search.getNewProducts\n        })\n    },\n\n    created () {\n        this.$store.dispatch('search/getNewProducts')\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}