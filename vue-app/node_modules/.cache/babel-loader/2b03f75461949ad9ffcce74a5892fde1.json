{"ast":null,"code":"import shop from '../../api/shop';\n\nconst state = () => ({\n  items: [],\n  checkoutStatus: null\n});\n\nconst getters = {\n  cartProducts(state, rootState) {\n    return state.items.map(({\n      id,\n      quantity\n    }) => {\n      const products = rootState.products.providerProducts.find(product => product.id === id);\n      return {\n        id: products.id,\n        name: products.name,\n        price: products.price,\n        quantity\n      };\n    });\n  },\n\n  cartTotalPrice(getters) {\n    return getters.cartProducts.reduce((product, total) => {\n      return total + product.price * product.quantity;\n    }, 0);\n  }\n\n};\nconst actions = {\n  async checkout({\n    commit,\n    state\n  }, products) {\n    const savedCartItems = [...state.items];\n    commit('setCheckoutStatus', null);\n    commit('setCartItems', {\n      items: []\n    });\n\n    try {\n      await shop.buyProducts(products);\n      commit('setCheckoutStatus', 'succesful');\n    } catch (e) {\n      console.error(e);\n      commit('setCheckoutStatus', 'failed');\n      commit('setCartItems', {\n        items: savedCartItems\n      });\n    }\n  },\n\n  addProductToCart({\n    state,\n    commit\n  }, product) {\n    commit('setCheckoutStatus', null);\n\n    if (product.inventory > 0) {\n      const cartItem = state.items.find(item => item.id === product.id);\n\n      if (!cartItem) {\n        commit('pushProductToCart', {\n          id: product.id\n        });\n      } else {\n        commit('incrementItemQuantity', {\n          id: product.id\n        });\n      }\n    }\n\n    commit('products/decrementProductInventory', {\n      id: product.id\n    }, {\n      root: true\n    });\n  }\n\n};\nconst mutations = {\n  pushProductToCart(state, {\n    id\n  }) {\n    state.items.push({\n      id,\n      quantity: 1\n    });\n  },\n\n  incrementItemQuantity(state, {\n    id\n  }) {\n    const cartItem = state.items.find(item => item.id === id);\n    cartItem.quantity++;\n  },\n\n  setCartItems(state, {\n    items\n  }) {\n    state.items = items;\n  },\n\n  setCheckoutStatus(state, status) {\n    state.checkoutStatus = status;\n  }\n\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["shop","state","items","checkoutStatus","getters","cartProducts","rootState","map","id","quantity","products","providerProducts","find","product","name","price","cartTotalPrice","reduce","total","actions","checkout","commit","savedCartItems","buyProducts","e","console","error","addProductToCart","inventory","cartItem","item","root","mutations","pushProductToCart","push","incrementItemQuantity","setCartItems","setCheckoutStatus","status","namespaced"],"sources":["/Users/charles/Documents/MicroFrontEnd/bistro/src/store/modules/cart.js"],"sourcesContent":["import shop from '../../api/shop'\n\nconst state = () => ({\n    items : [],\n    checkoutStatus: null\n})\n\nconst getters = {\n    cartProducts(state, rootState) {\n        return state.items.map(({id, quantity}) => {\n            const products = rootState.products.providerProducts.find(product => product.id === id)\n            return {\n                id : products.id,\n                name : products.name,\n                price : products.price,\n                quantity\n            }\n        })\n    },\n\n    cartTotalPrice (getters) {\n        return getters.cartProducts.reduce((product, total) => {\n            return total + product.price * product.quantity\n        }, 0)\n    }\n}\n\nconst actions = {\n    async checkout ({commit, state}, products) {\n        const savedCartItems = [...state.items]\n        commit('setCheckoutStatus', null)\n        commit('setCartItems', { items : []})\n        try {\n            await shop.buyProducts(products)\n            commit('setCheckoutStatus', 'succesful')\n        } catch(e) {\n            console.error(e)\n            commit('setCheckoutStatus', 'failed')\n            commit('setCartItems', {items : savedCartItems})\n        }\n    },\n\n    addProductToCart ({state, commit}, product) {\n        commit('setCheckoutStatus', null)\n        if (product.inventory > 0) {\n            const cartItem = state.items.find(item => item.id === product.id)\n            if (!cartItem) {\n                commit('pushProductToCart', {id : product.id})\n            } else {\n                commit('incrementItemQuantity', { id : product.id})\n            }\n        }\n        commit('products/decrementProductInventory', { id : product.id}, {root : true})\n    }\n}\n\nconst mutations = {\n    pushProductToCart (state, { id }) {\n        state.items.push({\n            id,\n            quantity: 1\n        })\n    },\n\n    incrementItemQuantity (state, { id }) {\n        const cartItem = state.items.find(item => item.id === id)\n        cartItem.quantity++\n    },\n\n    setCartItems (state, {items}) {\n        state.items = items\n    },\n\n    setCheckoutStatus (state, status) {\n        state.checkoutStatus = status\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}