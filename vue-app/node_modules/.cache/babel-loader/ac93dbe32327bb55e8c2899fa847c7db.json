{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_dropdown_item = _resolveComponent(\"b-dropdown-item\");\n\n  const _component_b_dropdown = _resolveComponent(\"b-dropdown\");\n\n  return _openBlock(), _createBlock(_component_b_dropdown, {\n    id: \"dropdown\",\n    text: \"Options\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.providers, provider => {\n      return _openBlock(), _createBlock(_component_b_dropdown_item, {\n        key: provider.id,\n        onClick: $event => _ctx.changeProvider(provider)\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(provider), 1\n        /* TEXT */\n        )]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onClick\"]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;;;;;uBACIA,aAOaC,qBAPb,EAOa;IAPDC,EAAE,EAAC,UAOF;IAPaC,IAAI,EAAC;EAOlB,CAPb;sBAEQ,MAA6B,oBADjCC,oBAKkBC,SALlB,EAKkB,IALlB,EAKkBC,YAJKC,cAIL,EAJPC,QAAqB,IAAb;2BADnBR,aAKkBS,0BALlB,EAKkB;QAHbC,GAAG,EAAEF,QAAQ,CAACN,EAGD;QAFbS,OAAK,YAAEJ,oBAAeC,QAAf;MAEM,CALlB;0BAII,MAAY,mCAAVA,WAAQ;QAAA;SAAE;;;;OAJhB;;MAAA;KAKkB,CALlB;;IAAA,CACiC;;;;GAFrC","names":["_createBlock","_component_b_dropdown","id","text","_createElementBlock","_Fragment","_renderList","_ctx","provider","_component_b_dropdown_item","key","onClick"],"sourceRoot":"","sources":["/Users/charles/Documents/MicroFrontEnd/bistro/src/components/providerSelection.vue"],"sourcesContent":["<template>\n    <b-dropdown id=\"dropdown\" text=\"Options\">\n        <b-dropdown-item \n            v-for=\"provider in providers\"\n            :key=\"provider.id\"\n            @click=\"changeProvider(provider)\">\n            {{provider}}\n        </b-dropdown-item>\n    </b-dropdown>\n</template>\n\n<script>\nimport { mapGetters, mapState, mapMutations } from 'vuex'\nexport default {\n    computed: {\n        ...mapState({\n            providers: state => state.providers.allProviders\n        })\n    },\n    methods: {\n        ...mapMutations([\n            'changeProvider'\n        ])\n    },\n    created () {\n        this.$store.dispatch('providers/getAllProviders')\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}