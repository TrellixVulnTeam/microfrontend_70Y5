{"ast":null,"code":"import _regeneratorRuntime from \"/Users/charles/Documents/MicroFrontEnd/bistro2.0/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/charles/Documents/MicroFrontEnd/bistro2.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport productsAPI from \"./productsAPI\";\n\nvar state = function state() {\n  return {\n    allProducts: [],\n    providerProducts: []\n  };\n};\n\nvar getters = {\n  getProviderProducts: function getProviderProducts(state) {\n    return state.providerProducts;\n  }\n};\nvar actions = {\n  updateProviderProducts: function updateProviderProducts(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var commit, rootState, searchInput, provider, products;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit, rootState = _ref.rootState;\n              searchInput = rootState.search.searchInput;\n              provider = rootState.providers.selectedProvider;\n              _context.next = 5;\n              return productsAPI.getProducts(provider._id, searchInput);\n\n            case 5:\n              products = _context.sent;\n              commit('setProviderProducts', products);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  updateAllProducts: function updateAllProducts(_ref2) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var commit, products;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return productsAPI.getAllProducts();\n\n            case 3:\n              products = _context2.sent;\n              commit('setAllProducts', products);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};\nvar mutations = {\n  setProviderProducts: function setProviderProducts(state, products) {\n    state.providerProducts = products;\n  },\n  setAllProducts: function setAllProducts(state, products) {\n    state.allProducts = products;\n  },\n  decrementItemQuantity: function decrementItemQuantity(state, product) {\n    var productToDecrement = state.product.find(function (item) {\n      return item._id === product._id;\n    });\n    productToDecrement.quantity--;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"names":["productsAPI","state","allProducts","providerProducts","getters","getProviderProducts","actions","updateProviderProducts","commit","rootState","searchInput","search","provider","providers","selectedProvider","getProducts","_id","products","updateAllProducts","getAllProducts","mutations","setProviderProducts","setAllProducts","decrementItemQuantity","product","productToDecrement","find","item","quantity","namespaced"],"sources":["/Users/charles/Documents/MicroFrontEnd/bistro2.0/src/ProductsList/products.js"],"sourcesContent":["import productsAPI from \"./productsAPI\"\n\nconst state = () => ({\n    allProducts :[],\n    providerProducts : []\n})\n\nconst getters = {\n    getProviderProducts (state) {\n        return state.providerProducts\n    }\n}\n\nconst actions = {\n    async updateProviderProducts ({commit, rootState}) {\n        const searchInput = rootState.search.searchInput\n        const provider = rootState.providers.selectedProvider\n        const products = await productsAPI.getProducts(provider._id, searchInput)\n        commit('setProviderProducts', products)\n    },\n\n    async updateAllProducts ({commit}) {\n        const products = await productsAPI.getAllProducts()\n        commit('setAllProducts', products)\n    }\n}\n\nconst mutations = {\n    setProviderProducts (state, products) {\n        state.providerProducts = products\n    },\n\n    setAllProducts (state, products) {\n        state.allProducts = products\n    },\n\n    decrementItemQuantity(state, product) {\n        const productToDecrement = state.product.find(item => item._id === product._id)\n        productToDecrement.quantity--\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n  }"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;EAAA,OAAO;IACjBC,WAAW,EAAE,EADI;IAEjBC,gBAAgB,EAAG;EAFF,CAAP;AAAA,CAAd;;AAKA,IAAMC,OAAO,GAAG;EACZC,mBADY,+BACSJ,KADT,EACgB;IACxB,OAAOA,KAAK,CAACE,gBAAb;EACH;AAHW,CAAhB;AAMA,IAAMG,OAAO,GAAG;EACNC,sBADM,wCACuC;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAApBC,MAAoB,QAApBA,MAAoB,EAAZC,SAAY,QAAZA,SAAY;cACzCC,WADyC,GAC3BD,SAAS,CAACE,MAAV,CAAiBD,WADU;cAEzCE,QAFyC,GAE9BH,SAAS,CAACI,SAAV,CAAoBC,gBAFU;cAAA;cAAA,OAGxBd,WAAW,CAACe,WAAZ,CAAwBH,QAAQ,CAACI,GAAjC,EAAsCN,WAAtC,CAHwB;;YAAA;cAGzCO,QAHyC;cAI/CT,MAAM,CAAC,qBAAD,EAAwBS,QAAxB,CAAN;;YAJ+C;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAKlD,CANW;EAQNC,iBARM,oCAQuB;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAATV,MAAS,SAATA,MAAS;cAAA;cAAA,OACRR,WAAW,CAACmB,cAAZ,EADQ;;YAAA;cACzBF,QADyB;cAE/BT,MAAM,CAAC,gBAAD,EAAmBS,QAAnB,CAAN;;YAF+B;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAGlC;AAXW,CAAhB;AAcA,IAAMG,SAAS,GAAG;EACdC,mBADc,+BACOpB,KADP,EACcgB,QADd,EACwB;IAClChB,KAAK,CAACE,gBAAN,GAAyBc,QAAzB;EACH,CAHa;EAKdK,cALc,0BAKErB,KALF,EAKSgB,QALT,EAKmB;IAC7BhB,KAAK,CAACC,WAAN,GAAoBe,QAApB;EACH,CAPa;EASdM,qBATc,iCASQtB,KATR,EASeuB,OATf,EASwB;IAClC,IAAMC,kBAAkB,GAAGxB,KAAK,CAACuB,OAAN,CAAcE,IAAd,CAAmB,UAAAC,IAAI;MAAA,OAAIA,IAAI,CAACX,GAAL,KAAaQ,OAAO,CAACR,GAAzB;IAAA,CAAvB,CAA3B;IACAS,kBAAkB,CAACG,QAAnB;EACH;AAZa,CAAlB;AAeA,eAAe;EACXC,UAAU,EAAE,IADD;EAEX5B,KAAK,EAALA,KAFW;EAGXG,OAAO,EAAPA,OAHW;EAIXE,OAAO,EAAPA,OAJW;EAKXc,SAAS,EAATA;AALW,CAAf"},"metadata":{},"sourceType":"module"}