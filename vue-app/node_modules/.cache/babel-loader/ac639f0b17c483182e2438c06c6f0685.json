{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = [\"disabled\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.products, product => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: product.idProduct,\n      class: \"oui\"\n    }, [_createTextVNode(_toDisplayString(product.nameProduct) + \" -- \" + _toDisplayString(product.price) + \" \", 1\n    /* TEXT */\n    ), _hoisted_1, _createElementVNode(\"button\", {\n      disabled: !product.inventory,\n      onClick: $event => _ctx.addProductToCart(product)\n    }, \" Add to cart \", 8\n    /* PROPS */\n    , _hoisted_2)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;gCAOYA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;;uBANRC,oBAaK,IAbL,EAaK,IAbL,EAaK,oBAZDA,oBAWKC,SAXL,EAWK,IAXL,EAWKC,YAVaC,aAUb,EAVEC,OAAmB,IAAZ;yBADdJ,oBAWK,IAXL,EAWK;MATJK,GAAG,EAAED,OAAO,CAACE,SAST;MARLC,KAAK,EAAC;IAQD,CAXL,qCAIOH,OAAO,CAACI,eAAc,SAAIC,iBAAGL,OAAO,CAACM,KAAX,IAAmB,KAChD;IAAA;OAAAC,YACAZ,oBAIS,QAJT,EAIS;MAHJa,QAAQ,GAAGR,OAAO,CAACS,SAGf;MAFJC,OAAK,YAAEX,sBAAiBC,OAAjB;IAEH,CAJT,EAEuC,eAFvC,EAIA;IAAA;IAJA,EAIAW,UAJA,EANJ;GAWK,CAXL;;EAAA,CAYC,EAbL","names":["_createElementVNode","_createElementBlock","_Fragment","_renderList","_ctx","product","key","idProduct","class","nameProduct","_toDisplayString","price","_hoisted_1","disabled","inventory","onClick","_hoisted_2"],"sourceRoot":"","sources":["/Users/charles/Documents/MicroFrontEnd/bistro/src/components/productsList.vue"],"sourcesContent":["<template>\n    <ul>\n        <li \n        v-for=\"product in products\"\n        :key=\"product.idProduct\"\n        class=\"oui\">\n            {{ product.nameProduct }} -- {{ product.price }}\n            <br>\n            <button \n                :disabled=\"!product.inventory\"\n                @click=\"addProductToCart(product)\">\n                Add to cart\n            </button>\n        </li>\n    </ul>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\nexport default {\n  computed: mapState({\n    products: state => state.products.providerProducts\n  }),\n  methods: {\n    ...mapActions('cart', [\n      'addProductToCart'\n    ])\n  },\n  created () {\n    this.$store.dispatch('products/updateProviderProducts')\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module"}