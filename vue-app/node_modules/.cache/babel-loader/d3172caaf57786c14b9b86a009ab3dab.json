{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"dropdown\"\n};\nconst _hoisted_2 = {\n  href: \"#\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"a\", _hoisted_2, _toDisplayString(_ctx.selectedProvider), 1\n  /* TEXT */\n  ), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.providers, provider => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: provider.id,\n      onClick: _cache[0] || (_cache[0] = () => {})\n    }, _toDisplayString(provider.name), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;EACSA,EAAE,EAAC;;;EACDC,IAAI,EAAC;;;uBADZC,oBAYM,KAZN,cAYM,CAXFC,oBAEI,GAFJ,cAEIC,iBADGC,qBACH,CAFJ,EACuB;EAAA;EADvB,CAWE,EAREF,oBAOK,IAPL,EAOK,IAPL,EAOK,oBANDD,oBAKKI,SALL,EAKK,IALL,EAKKC,YAJcF,cAId,EAJEG,QAAqB,IAAb;yBADfN,oBAKK,IALL,EAKK;MAHJO,GAAG,EAAED,QAAQ,CAACR,EAGV;MAFJU,OAAK,4BAAN,OAAS,CAAH;IAED,CALL,mBAIGF,QAAQ,CAACG,KAJZ,EAIgB;IAAA;IAJhB;GAKK,CALL;;EAAA,CAMC,EAPL,CAQF,CAZN","names":["id","href","_createElementBlock","_createElementVNode","_toDisplayString","_ctx","_Fragment","_renderList","provider","key","onClick","name"],"sourceRoot":"","sources":["/Users/charles/Documents/MicroFrontEnd/bistro/src/components/providerSelection.vue"],"sourcesContent":["<template>\n    <div id=\"dropdown\">\n        <a href=\"#\">\n            {{ selectedProvider }}\n        </a>\n            <ul>\n                <li\n                v-for=\"provider in providers\"\n                :key=\"provider.id\"\n                @click=\"\">\n                {{ provider.name }}\n                </li>\n            </ul>\n    </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nexport default {\n    computed: {\n        ...mapState({\n            providers: state => state.providers.allProviders,\n            selectedProvider : state => state.providers.selectedProvider\n        })\n    },\n\n    methods: {\n        \n    },\n\n    created () {\n        this.$store.dispatch('providers/apiGetAllProviders')\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}